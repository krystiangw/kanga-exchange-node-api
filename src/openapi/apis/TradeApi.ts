/* tslint:disable */
/* eslint-disable */
/**
 * Kanga Exchange API
 * API documentation generated from Kanga Exchange source code.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanga.exchange
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiMarketsPost200Response,
  ApiV2MarketOrderBookPost200Response,
  ApiV2MarketOrderBookPostRequest,
  ApiV2MarketOrderCancelPost200Response,
  ApiV2MarketOrderCancelPostRequest,
  ApiV2MarketOrderCreatePost200Response,
  ApiV2MarketOrderCreatePostRequest,
  ApiV2MarketOrderGetPost200Response,
  ApiV2MarketOrderGetPostRequest,
  ApiV2MarketOrderHistoryListPost200Response,
  ApiV2MarketOrderListPost200Response,
  ApiV2MarketOrderListPostRequest,
} from '../models';
import {
    ApiMarketsPost200ResponseFromJSON,
    ApiMarketsPost200ResponseToJSON,
    ApiV2MarketOrderBookPost200ResponseFromJSON,
    ApiV2MarketOrderBookPost200ResponseToJSON,
    ApiV2MarketOrderBookPostRequestFromJSON,
    ApiV2MarketOrderBookPostRequestToJSON,
    ApiV2MarketOrderCancelPost200ResponseFromJSON,
    ApiV2MarketOrderCancelPost200ResponseToJSON,
    ApiV2MarketOrderCancelPostRequestFromJSON,
    ApiV2MarketOrderCancelPostRequestToJSON,
    ApiV2MarketOrderCreatePost200ResponseFromJSON,
    ApiV2MarketOrderCreatePost200ResponseToJSON,
    ApiV2MarketOrderCreatePostRequestFromJSON,
    ApiV2MarketOrderCreatePostRequestToJSON,
    ApiV2MarketOrderGetPost200ResponseFromJSON,
    ApiV2MarketOrderGetPost200ResponseToJSON,
    ApiV2MarketOrderGetPostRequestFromJSON,
    ApiV2MarketOrderGetPostRequestToJSON,
    ApiV2MarketOrderHistoryListPost200ResponseFromJSON,
    ApiV2MarketOrderHistoryListPost200ResponseToJSON,
    ApiV2MarketOrderListPost200ResponseFromJSON,
    ApiV2MarketOrderListPost200ResponseToJSON,
    ApiV2MarketOrderListPostRequestFromJSON,
    ApiV2MarketOrderListPostRequestToJSON,
} from '../models';

export interface ApiMarketsPostRequest {
    body: object;
}

export interface ApiV2MarketOrderBookPostOperationRequest {
    apiV2MarketOrderBookPostRequest: ApiV2MarketOrderBookPostRequest;
}

export interface ApiV2MarketOrderCancelPostOperationRequest {
    apiV2MarketOrderCancelPostRequest: ApiV2MarketOrderCancelPostRequest;
}

export interface ApiV2MarketOrderCreatePostOperationRequest {
    apiV2MarketOrderCreatePostRequest: ApiV2MarketOrderCreatePostRequest;
}

export interface ApiV2MarketOrderGetPostOperationRequest {
    apiV2MarketOrderGetPostRequest: ApiV2MarketOrderGetPostRequest;
}

export interface ApiV2MarketOrderHistoryListPostRequest {
    apiV2MarketOrderBookPostRequest: ApiV2MarketOrderBookPostRequest;
}

export interface ApiV2MarketOrderListPostOperationRequest {
    apiV2MarketOrderListPostRequest: ApiV2MarketOrderListPostRequest;
}

/**
 * 
 */
export class TradeApi extends runtime.BaseAPI {

    /**
     * Returns the list of all markets. This call will be deprecated in the near future.
     * Market list
     */
    async apiMarketsPostRaw(requestParameters: ApiMarketsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiMarketsPost200Response>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling apiMarketsPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/markets`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiMarketsPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns the list of all markets. This call will be deprecated in the near future.
     * Market list
     */
    async apiMarketsPost(requestParameters: ApiMarketsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiMarketsPost200Response> {
        const response = await this.apiMarketsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns the order book for the specified market (cached every 2 seconds).
     * Order book
     */
    async apiV2MarketOrderBookPostRaw(requestParameters: ApiV2MarketOrderBookPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2MarketOrderBookPost200Response>> {
        if (requestParameters.apiV2MarketOrderBookPostRequest === null || requestParameters.apiV2MarketOrderBookPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2MarketOrderBookPostRequest','Required parameter requestParameters.apiV2MarketOrderBookPostRequest was null or undefined when calling apiV2MarketOrderBookPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v2/market/order/book`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2MarketOrderBookPostRequestToJSON(requestParameters.apiV2MarketOrderBookPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2MarketOrderBookPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns the order book for the specified market (cached every 2 seconds).
     * Order book
     */
    async apiV2MarketOrderBookPost(requestParameters: ApiV2MarketOrderBookPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2MarketOrderBookPost200Response> {
        const response = await this.apiV2MarketOrderBookPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Cancels the order identified by orderId.
     * Cancel order
     */
    async apiV2MarketOrderCancelPostRaw(requestParameters: ApiV2MarketOrderCancelPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2MarketOrderCancelPost200Response>> {
        if (requestParameters.apiV2MarketOrderCancelPostRequest === null || requestParameters.apiV2MarketOrderCancelPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2MarketOrderCancelPostRequest','Required parameter requestParameters.apiV2MarketOrderCancelPostRequest was null or undefined when calling apiV2MarketOrderCancelPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v2/market/order/cancel`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2MarketOrderCancelPostRequestToJSON(requestParameters.apiV2MarketOrderCancelPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2MarketOrderCancelPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Cancels the order identified by orderId.
     * Cancel order
     */
    async apiV2MarketOrderCancelPost(requestParameters: ApiV2MarketOrderCancelPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2MarketOrderCancelPost200Response> {
        const response = await this.apiV2MarketOrderCancelPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Creates a new order. On success returns orderId.
     * Create order
     */
    async apiV2MarketOrderCreatePostRaw(requestParameters: ApiV2MarketOrderCreatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2MarketOrderCreatePost200Response>> {
        if (requestParameters.apiV2MarketOrderCreatePostRequest === null || requestParameters.apiV2MarketOrderCreatePostRequest === undefined) {
            throw new runtime.RequiredError('apiV2MarketOrderCreatePostRequest','Required parameter requestParameters.apiV2MarketOrderCreatePostRequest was null or undefined when calling apiV2MarketOrderCreatePost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v2/market/order/create`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2MarketOrderCreatePostRequestToJSON(requestParameters.apiV2MarketOrderCreatePostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2MarketOrderCreatePost200ResponseFromJSON(jsonValue));
    }

    /**
     * Creates a new order. On success returns orderId.
     * Create order
     */
    async apiV2MarketOrderCreatePost(requestParameters: ApiV2MarketOrderCreatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2MarketOrderCreatePost200Response> {
        const response = await this.apiV2MarketOrderCreatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns the details of the specified order.
     * Get order
     */
    async apiV2MarketOrderGetPostRaw(requestParameters: ApiV2MarketOrderGetPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2MarketOrderGetPost200Response>> {
        if (requestParameters.apiV2MarketOrderGetPostRequest === null || requestParameters.apiV2MarketOrderGetPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2MarketOrderGetPostRequest','Required parameter requestParameters.apiV2MarketOrderGetPostRequest was null or undefined when calling apiV2MarketOrderGetPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v2/market/order/get`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2MarketOrderGetPostRequestToJSON(requestParameters.apiV2MarketOrderGetPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2MarketOrderGetPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns the details of the specified order.
     * Get order
     */
    async apiV2MarketOrderGetPost(requestParameters: ApiV2MarketOrderGetPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2MarketOrderGetPost200Response> {
        const response = await this.apiV2MarketOrderGetPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns up to 50 recent orders (both fulfilled and canceled) from the specified market.
     * Order history
     */
    async apiV2MarketOrderHistoryListPostRaw(requestParameters: ApiV2MarketOrderHistoryListPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2MarketOrderHistoryListPost200Response>> {
        if (requestParameters.apiV2MarketOrderBookPostRequest === null || requestParameters.apiV2MarketOrderBookPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2MarketOrderBookPostRequest','Required parameter requestParameters.apiV2MarketOrderBookPostRequest was null or undefined when calling apiV2MarketOrderHistoryListPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v2/market/order/history/list`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2MarketOrderBookPostRequestToJSON(requestParameters.apiV2MarketOrderBookPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2MarketOrderHistoryListPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns up to 50 recent orders (both fulfilled and canceled) from the specified market.
     * Order history
     */
    async apiV2MarketOrderHistoryListPost(requestParameters: ApiV2MarketOrderHistoryListPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2MarketOrderHistoryListPost200Response> {
        const response = await this.apiV2MarketOrderHistoryListPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns up to 100 active orders from the specified market.
     * Active order list
     */
    async apiV2MarketOrderListPostRaw(requestParameters: ApiV2MarketOrderListPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2MarketOrderListPost200Response>> {
        if (requestParameters.apiV2MarketOrderListPostRequest === null || requestParameters.apiV2MarketOrderListPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2MarketOrderListPostRequest','Required parameter requestParameters.apiV2MarketOrderListPostRequest was null or undefined when calling apiV2MarketOrderListPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v2/market/order/list`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2MarketOrderListPostRequestToJSON(requestParameters.apiV2MarketOrderListPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2MarketOrderListPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns up to 100 active orders from the specified market.
     * Active order list
     */
    async apiV2MarketOrderListPost(requestParameters: ApiV2MarketOrderListPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2MarketOrderListPost200Response> {
        const response = await this.apiV2MarketOrderListPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
