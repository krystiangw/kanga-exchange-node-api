/* tslint:disable */
/* eslint-disable */
/**
 * Kanga.exchange API
 * This is API generated from kanga.exchange code.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanga.exchange
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiAdminMarketTransactionsListPostRequest,
  ApiUserMarketTransactionsListPost200Response,
  ApiUserMarketTransactionsListPostRequest,
} from '../models';
import {
    ApiAdminMarketTransactionsListPostRequestFromJSON,
    ApiAdminMarketTransactionsListPostRequestToJSON,
    ApiUserMarketTransactionsListPost200ResponseFromJSON,
    ApiUserMarketTransactionsListPost200ResponseToJSON,
    ApiUserMarketTransactionsListPostRequestFromJSON,
    ApiUserMarketTransactionsListPostRequestToJSON,
} from '../models';

export interface ApiAdminMarketTransactionsListPostOperationRequest {
    apiAdminMarketTransactionsListPostRequest: ApiAdminMarketTransactionsListPostRequest;
}

export interface ApiUserMarketTransactionsListPostOperationRequest {
    apiUserMarketTransactionsListPostRequest: ApiUserMarketTransactionsListPostRequest;
}

/**
 * 
 */
export class TransactionsApi extends runtime.BaseAPI {

    /**
     * Returns user transactions for given dates.
     * User transaction list.
     */
    async apiAdminMarketTransactionsListPostRaw(requestParameters: ApiAdminMarketTransactionsListPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiUserMarketTransactionsListPost200Response>> {
        if (requestParameters.apiAdminMarketTransactionsListPostRequest === null || requestParameters.apiAdminMarketTransactionsListPostRequest === undefined) {
            throw new runtime.RequiredError('apiAdminMarketTransactionsListPostRequest','Required parameter requestParameters.apiAdminMarketTransactionsListPostRequest was null or undefined when calling apiAdminMarketTransactionsListPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["auth"] = this.configuration.apiKey("auth"); // AdminAuth authentication
        }

        const response = await this.request({
            path: `/api/admin/market/transactions/list`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiAdminMarketTransactionsListPostRequestToJSON(requestParameters.apiAdminMarketTransactionsListPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiUserMarketTransactionsListPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns user transactions for given dates.
     * User transaction list.
     */
    async apiAdminMarketTransactionsListPost(requestParameters: ApiAdminMarketTransactionsListPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiUserMarketTransactionsListPost200Response> {
        const response = await this.apiAdminMarketTransactionsListPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns user transactions for given dates.
     * User transaction list.
     */
    async apiUserMarketTransactionsListPostRaw(requestParameters: ApiUserMarketTransactionsListPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiUserMarketTransactionsListPost200Response>> {
        if (requestParameters.apiUserMarketTransactionsListPostRequest === null || requestParameters.apiUserMarketTransactionsListPostRequest === undefined) {
            throw new runtime.RequiredError('apiUserMarketTransactionsListPostRequest','Required parameter requestParameters.apiUserMarketTransactionsListPostRequest was null or undefined when calling apiUserMarketTransactionsListPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["auth"] = this.configuration.apiKey("auth"); // UserAuth authentication
        }

        const response = await this.request({
            path: `/api/user/market/transactions/list`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiUserMarketTransactionsListPostRequestToJSON(requestParameters.apiUserMarketTransactionsListPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiUserMarketTransactionsListPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns user transactions for given dates.
     * User transaction list.
     */
    async apiUserMarketTransactionsListPost(requestParameters: ApiUserMarketTransactionsListPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiUserMarketTransactionsListPost200Response> {
        const response = await this.apiUserMarketTransactionsListPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
