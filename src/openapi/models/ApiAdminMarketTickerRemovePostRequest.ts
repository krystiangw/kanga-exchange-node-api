/* tslint:disable */
/* eslint-disable */
/**
 * Kanga.exchange API
 * This is API generated from kanga.exchange code.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanga.exchange
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiAdminMarketTickerRemovePostRequest
 */
export interface ApiAdminMarketTickerRemovePostRequest {
    /**
     * 
     * @type {string}
     * @memberof ApiAdminMarketTickerRemovePostRequest
     */
    marketId: ApiAdminMarketTickerRemovePostRequestMarketIdEnum;
}


/**
 * @export
 */
export const ApiAdminMarketTickerRemovePostRequestMarketIdEnum = {
    Fail: 'fail'
} as const;
export type ApiAdminMarketTickerRemovePostRequestMarketIdEnum = typeof ApiAdminMarketTickerRemovePostRequestMarketIdEnum[keyof typeof ApiAdminMarketTickerRemovePostRequestMarketIdEnum];


/**
 * Check if a given object implements the ApiAdminMarketTickerRemovePostRequest interface.
 */
export function instanceOfApiAdminMarketTickerRemovePostRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "marketId" in value;

    return isInstance;
}

export function ApiAdminMarketTickerRemovePostRequestFromJSON(json: any): ApiAdminMarketTickerRemovePostRequest {
    return ApiAdminMarketTickerRemovePostRequestFromJSONTyped(json, false);
}

export function ApiAdminMarketTickerRemovePostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiAdminMarketTickerRemovePostRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'marketId': json['marketId'],
    };
}

export function ApiAdminMarketTickerRemovePostRequestToJSON(value?: ApiAdminMarketTickerRemovePostRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'marketId': value.marketId,
    };
}

