/* tslint:disable */
/* eslint-disable */
/**
 * Kanga Exchange API
 * API documentation generated from Kanga Exchange source code.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanga.exchange
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiV2PayPaymentGetPostRequest
 */
export interface ApiV2PayPaymentGetPostRequest {
    /**
     * Unique request identifier, e.g. a timestamp in milliseconds
     * @type {number}
     * @memberof ApiV2PayPaymentGetPostRequest
     */
    nonce: number;
    /**
     * Your public key
     * @type {string}
     * @memberof ApiV2PayPaymentGetPostRequest
     */
    appId: string;
    /**
     * KangaPay payment Id returned from /create endpoint
     * @type {string}
     * @memberof ApiV2PayPaymentGetPostRequest
     */
    id: string;
}

/**
 * Check if a given object implements the ApiV2PayPaymentGetPostRequest interface.
 */
export function instanceOfApiV2PayPaymentGetPostRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "nonce" in value;
    isInstance = isInstance && "appId" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function ApiV2PayPaymentGetPostRequestFromJSON(json: any): ApiV2PayPaymentGetPostRequest {
    return ApiV2PayPaymentGetPostRequestFromJSONTyped(json, false);
}

export function ApiV2PayPaymentGetPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiV2PayPaymentGetPostRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nonce': json['nonce'],
        'appId': json['appId'],
        'id': json['id'],
    };
}

export function ApiV2PayPaymentGetPostRequestToJSON(value?: ApiV2PayPaymentGetPostRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nonce': value.nonce,
        'appId': value.appId,
        'id': value.id,
    };
}

