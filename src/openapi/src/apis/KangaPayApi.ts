/* tslint:disable */
/* eslint-disable */
/**
 * Kanga Exchange API
 * API documentation generated from Kanga Exchange source code.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanga.exchange
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiV2PayCurrenciesListGet200Response,
  ApiV2PayPaymentCreatePost200Response,
  ApiV2PayPaymentCreatePostRequest,
  ApiV2PayPaymentGetPost200Response,
  ApiV2PayPaymentGetPostRequest,
} from '../models';
import {
    ApiV2PayCurrenciesListGet200ResponseFromJSON,
    ApiV2PayCurrenciesListGet200ResponseToJSON,
    ApiV2PayPaymentCreatePost200ResponseFromJSON,
    ApiV2PayPaymentCreatePost200ResponseToJSON,
    ApiV2PayPaymentCreatePostRequestFromJSON,
    ApiV2PayPaymentCreatePostRequestToJSON,
    ApiV2PayPaymentGetPost200ResponseFromJSON,
    ApiV2PayPaymentGetPost200ResponseToJSON,
    ApiV2PayPaymentGetPostRequestFromJSON,
    ApiV2PayPaymentGetPostRequestToJSON,
} from '../models';

export interface ApiV2PayPaymentCreatePostOperationRequest {
    apiV2PayPaymentCreatePostRequest: ApiV2PayPaymentCreatePostRequest;
}

export interface ApiV2PayPaymentGetPostOperationRequest {
    apiV2PayPaymentGetPostRequest: ApiV2PayPaymentGetPostRequest;
}

/**
 * KangaPayApi - interface
 * 
 * @export
 * @interface KangaPayApiInterface
 */
export interface KangaPayApiInterface {
    /**
     * This endpoint returns which currencies are exchanged with Kanga Pay
     * @summary Kanga Pay currencies
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KangaPayApiInterface
     */
    apiV2PayCurrenciesListGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2PayCurrenciesListGet200Response>>;

    /**
     * This endpoint returns which currencies are exchanged with Kanga Pay
     * Kanga Pay currencies
     */
    apiV2PayCurrenciesListGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2PayCurrenciesListGet200Response>;

    /**
     * Creates a new KangaPay payment for the user identified by the payCode.
     * @summary Create payment
     * @param {ApiV2PayPaymentCreatePostRequest} apiV2PayPaymentCreatePostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KangaPayApiInterface
     */
    apiV2PayPaymentCreatePostRaw(requestParameters: ApiV2PayPaymentCreatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2PayPaymentCreatePost200Response>>;

    /**
     * Creates a new KangaPay payment for the user identified by the payCode.
     * Create payment
     */
    apiV2PayPaymentCreatePost(requestParameters: ApiV2PayPaymentCreatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2PayPaymentCreatePost200Response>;

    /**
     * Returns KangaPay payment details.
     * @summary Get payment details
     * @param {ApiV2PayPaymentGetPostRequest} apiV2PayPaymentGetPostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KangaPayApiInterface
     */
    apiV2PayPaymentGetPostRaw(requestParameters: ApiV2PayPaymentGetPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2PayPaymentGetPost200Response>>;

    /**
     * Returns KangaPay payment details.
     * Get payment details
     */
    apiV2PayPaymentGetPost(requestParameters: ApiV2PayPaymentGetPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2PayPaymentGetPost200Response>;

}

/**
 * 
 */
export class KangaPayApi extends runtime.BaseAPI implements KangaPayApiInterface {

    /**
     * This endpoint returns which currencies are exchanged with Kanga Pay
     * Kanga Pay currencies
     */
    async apiV2PayCurrenciesListGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2PayCurrenciesListGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v2/pay/currencies/list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2PayCurrenciesListGet200ResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint returns which currencies are exchanged with Kanga Pay
     * Kanga Pay currencies
     */
    async apiV2PayCurrenciesListGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2PayCurrenciesListGet200Response> {
        const response = await this.apiV2PayCurrenciesListGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Creates a new KangaPay payment for the user identified by the payCode.
     * Create payment
     */
    async apiV2PayPaymentCreatePostRaw(requestParameters: ApiV2PayPaymentCreatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2PayPaymentCreatePost200Response>> {
        if (requestParameters.apiV2PayPaymentCreatePostRequest === null || requestParameters.apiV2PayPaymentCreatePostRequest === undefined) {
            throw new runtime.RequiredError('apiV2PayPaymentCreatePostRequest','Required parameter requestParameters.apiV2PayPaymentCreatePostRequest was null or undefined when calling apiV2PayPaymentCreatePost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }

        const response = await this.request({
            path: `/api/v2/pay/payment/create`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2PayPaymentCreatePostRequestToJSON(requestParameters.apiV2PayPaymentCreatePostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2PayPaymentCreatePost200ResponseFromJSON(jsonValue));
    }

    /**
     * Creates a new KangaPay payment for the user identified by the payCode.
     * Create payment
     */
    async apiV2PayPaymentCreatePost(requestParameters: ApiV2PayPaymentCreatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2PayPaymentCreatePost200Response> {
        const response = await this.apiV2PayPaymentCreatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns KangaPay payment details.
     * Get payment details
     */
    async apiV2PayPaymentGetPostRaw(requestParameters: ApiV2PayPaymentGetPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2PayPaymentGetPost200Response>> {
        if (requestParameters.apiV2PayPaymentGetPostRequest === null || requestParameters.apiV2PayPaymentGetPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2PayPaymentGetPostRequest','Required parameter requestParameters.apiV2PayPaymentGetPostRequest was null or undefined when calling apiV2PayPaymentGetPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }

        const response = await this.request({
            path: `/api/v2/pay/payment/get`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2PayPaymentGetPostRequestToJSON(requestParameters.apiV2PayPaymentGetPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2PayPaymentGetPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns KangaPay payment details.
     * Get payment details
     */
    async apiV2PayPaymentGetPost(requestParameters: ApiV2PayPaymentGetPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2PayPaymentGetPost200Response> {
        const response = await this.apiV2PayPaymentGetPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
