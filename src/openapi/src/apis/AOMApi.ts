/* tslint:disable */
/* eslint-disable */
/**
 * Kanga Exchange API
 * API documentation generated from Kanga Exchange source code.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanga.exchange
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiV2AomClosePost200Response,
  ApiV2AomCreatePost200Response,
  ApiV2AomCreatePostRequest,
  ApiV2AomGetPost200Response,
  ApiV2AomGetPostRequest,
  ApiV2AomListPost200Response,
  ApiV2AomListPostRequest,
  ApiV2AomStartPost200Response,
  ApiV2AomStopPost200Response,
  ApiV2AomTopupPost200Response,
  ApiV2AomTopupPostRequest,
  ApiV2AomUpdatePost200Response,
  ApiV2AomUpdatePostRequest,
  ApiV2AomWithdrawPost200Response,
} from '../models';
import {
    ApiV2AomClosePost200ResponseFromJSON,
    ApiV2AomClosePost200ResponseToJSON,
    ApiV2AomCreatePost200ResponseFromJSON,
    ApiV2AomCreatePost200ResponseToJSON,
    ApiV2AomCreatePostRequestFromJSON,
    ApiV2AomCreatePostRequestToJSON,
    ApiV2AomGetPost200ResponseFromJSON,
    ApiV2AomGetPost200ResponseToJSON,
    ApiV2AomGetPostRequestFromJSON,
    ApiV2AomGetPostRequestToJSON,
    ApiV2AomListPost200ResponseFromJSON,
    ApiV2AomListPost200ResponseToJSON,
    ApiV2AomListPostRequestFromJSON,
    ApiV2AomListPostRequestToJSON,
    ApiV2AomStartPost200ResponseFromJSON,
    ApiV2AomStartPost200ResponseToJSON,
    ApiV2AomStopPost200ResponseFromJSON,
    ApiV2AomStopPost200ResponseToJSON,
    ApiV2AomTopupPost200ResponseFromJSON,
    ApiV2AomTopupPost200ResponseToJSON,
    ApiV2AomTopupPostRequestFromJSON,
    ApiV2AomTopupPostRequestToJSON,
    ApiV2AomUpdatePost200ResponseFromJSON,
    ApiV2AomUpdatePost200ResponseToJSON,
    ApiV2AomUpdatePostRequestFromJSON,
    ApiV2AomUpdatePostRequestToJSON,
    ApiV2AomWithdrawPost200ResponseFromJSON,
    ApiV2AomWithdrawPost200ResponseToJSON,
} from '../models';

export interface ApiV2AomClosePostRequest {
    apiV2AomGetPostRequest: ApiV2AomGetPostRequest;
}

export interface ApiV2AomCreatePostOperationRequest {
    apiV2AomCreatePostRequest: ApiV2AomCreatePostRequest;
}

export interface ApiV2AomGetPostOperationRequest {
    apiV2AomGetPostRequest: ApiV2AomGetPostRequest;
}

export interface ApiV2AomListPostOperationRequest {
    apiV2AomListPostRequest: ApiV2AomListPostRequest;
}

export interface ApiV2AomStartPostRequest {
    apiV2AomGetPostRequest: ApiV2AomGetPostRequest;
}

export interface ApiV2AomStopPostRequest {
    apiV2AomGetPostRequest: ApiV2AomGetPostRequest;
}

export interface ApiV2AomTopupPostOperationRequest {
    apiV2AomTopupPostRequest: ApiV2AomTopupPostRequest;
}

export interface ApiV2AomUpdatePostOperationRequest {
    apiV2AomUpdatePostRequest: ApiV2AomUpdatePostRequest;
}

export interface ApiV2AomWithdrawPostRequest {
    apiV2AomGetPostRequest: ApiV2AomGetPostRequest;
}

/**
 * AOMApi - interface
 * 
 * @export
 * @interface AOMApiInterface
 */
export interface AOMApiInterface {
    /**
     * Closes an automated order maker and transfers funds to wallet. An AOM can only be closed when inactive
     * @summary Close automated order maker
     * @param {ApiV2AomGetPostRequest} apiV2AomGetPostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AOMApiInterface
     */
    apiV2AomClosePostRaw(requestParameters: ApiV2AomClosePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomClosePost200Response>>;

    /**
     * Closes an automated order maker and transfers funds to wallet. An AOM can only be closed when inactive
     * Close automated order maker
     */
    apiV2AomClosePost(requestParameters: ApiV2AomClosePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomClosePost200Response>;

    /**
     * Creates a new automated order maker.
     * @summary Create automated order maker
     * @param {ApiV2AomCreatePostRequest} apiV2AomCreatePostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AOMApiInterface
     */
    apiV2AomCreatePostRaw(requestParameters: ApiV2AomCreatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomCreatePost200Response>>;

    /**
     * Creates a new automated order maker.
     * Create automated order maker
     */
    apiV2AomCreatePost(requestParameters: ApiV2AomCreatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomCreatePost200Response>;

    /**
     * Returns automated order maker details and currency balances.
     * @summary Automated order maker details
     * @param {ApiV2AomGetPostRequest} apiV2AomGetPostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AOMApiInterface
     */
    apiV2AomGetPostRaw(requestParameters: ApiV2AomGetPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomGetPost200Response>>;

    /**
     * Returns automated order maker details and currency balances.
     * Automated order maker details
     */
    apiV2AomGetPost(requestParameters: ApiV2AomGetPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomGetPost200Response>;

    /**
     * Returns the list of automated order makers.
     * @summary List automated order makers
     * @param {ApiV2AomListPostRequest} apiV2AomListPostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AOMApiInterface
     */
    apiV2AomListPostRaw(requestParameters: ApiV2AomListPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomListPost200Response>>;

    /**
     * Returns the list of automated order makers.
     * List automated order makers
     */
    apiV2AomListPost(requestParameters: ApiV2AomListPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomListPost200Response>;

    /**
     * Starts a newly created or previously stopped automated order maker.
     * @summary Start automated order maker
     * @param {ApiV2AomGetPostRequest} apiV2AomGetPostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AOMApiInterface
     */
    apiV2AomStartPostRaw(requestParameters: ApiV2AomStartPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomStartPost200Response>>;

    /**
     * Starts a newly created or previously stopped automated order maker.
     * Start automated order maker
     */
    apiV2AomStartPost(requestParameters: ApiV2AomStartPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomStartPost200Response>;

    /**
     * Stops an active automated order maker.
     * @summary Stop automated order maker
     * @param {ApiV2AomGetPostRequest} apiV2AomGetPostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AOMApiInterface
     */
    apiV2AomStopPostRaw(requestParameters: ApiV2AomStopPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomStopPost200Response>>;

    /**
     * Stops an active automated order maker.
     * Stop automated order maker
     */
    apiV2AomStopPost(requestParameters: ApiV2AomStopPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomStopPost200Response>;

    /**
     * Tops up automated order maker currency balance.
     * @summary Top up automated order maker
     * @param {ApiV2AomTopupPostRequest} apiV2AomTopupPostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AOMApiInterface
     */
    apiV2AomTopupPostRaw(requestParameters: ApiV2AomTopupPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomTopupPost200Response>>;

    /**
     * Tops up automated order maker currency balance.
     * Top up automated order maker
     */
    apiV2AomTopupPost(requestParameters: ApiV2AomTopupPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomTopupPost200Response>;

    /**
     * Updates an existing automated order maker. An AOM can only be updated when inactive.
     * @summary Update automated order maker
     * @param {ApiV2AomUpdatePostRequest} apiV2AomUpdatePostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AOMApiInterface
     */
    apiV2AomUpdatePostRaw(requestParameters: ApiV2AomUpdatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomUpdatePost200Response>>;

    /**
     * Updates an existing automated order maker. An AOM can only be updated when inactive.
     * Update automated order maker
     */
    apiV2AomUpdatePost(requestParameters: ApiV2AomUpdatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomUpdatePost200Response>;

    /**
     * Transfers the total balance of automated order maker purchases to wallet.
     * @summary Automated order maker purchase balance withdrawal
     * @param {ApiV2AomGetPostRequest} apiV2AomGetPostRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AOMApiInterface
     */
    apiV2AomWithdrawPostRaw(requestParameters: ApiV2AomWithdrawPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomWithdrawPost200Response>>;

    /**
     * Transfers the total balance of automated order maker purchases to wallet.
     * Automated order maker purchase balance withdrawal
     */
    apiV2AomWithdrawPost(requestParameters: ApiV2AomWithdrawPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomWithdrawPost200Response>;

}

/**
 * 
 */
export class AOMApi extends runtime.BaseAPI implements AOMApiInterface {

    /**
     * Closes an automated order maker and transfers funds to wallet. An AOM can only be closed when inactive
     * Close automated order maker
     */
    async apiV2AomClosePostRaw(requestParameters: ApiV2AomClosePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomClosePost200Response>> {
        if (requestParameters.apiV2AomGetPostRequest === null || requestParameters.apiV2AomGetPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2AomGetPostRequest','Required parameter requestParameters.apiV2AomGetPostRequest was null or undefined when calling apiV2AomClosePost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }

        const response = await this.request({
            path: `/api/v2/aom/close`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2AomGetPostRequestToJSON(requestParameters.apiV2AomGetPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2AomClosePost200ResponseFromJSON(jsonValue));
    }

    /**
     * Closes an automated order maker and transfers funds to wallet. An AOM can only be closed when inactive
     * Close automated order maker
     */
    async apiV2AomClosePost(requestParameters: ApiV2AomClosePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomClosePost200Response> {
        const response = await this.apiV2AomClosePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Creates a new automated order maker.
     * Create automated order maker
     */
    async apiV2AomCreatePostRaw(requestParameters: ApiV2AomCreatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomCreatePost200Response>> {
        if (requestParameters.apiV2AomCreatePostRequest === null || requestParameters.apiV2AomCreatePostRequest === undefined) {
            throw new runtime.RequiredError('apiV2AomCreatePostRequest','Required parameter requestParameters.apiV2AomCreatePostRequest was null or undefined when calling apiV2AomCreatePost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }

        const response = await this.request({
            path: `/api/v2/aom/create`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2AomCreatePostRequestToJSON(requestParameters.apiV2AomCreatePostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2AomCreatePost200ResponseFromJSON(jsonValue));
    }

    /**
     * Creates a new automated order maker.
     * Create automated order maker
     */
    async apiV2AomCreatePost(requestParameters: ApiV2AomCreatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomCreatePost200Response> {
        const response = await this.apiV2AomCreatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns automated order maker details and currency balances.
     * Automated order maker details
     */
    async apiV2AomGetPostRaw(requestParameters: ApiV2AomGetPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomGetPost200Response>> {
        if (requestParameters.apiV2AomGetPostRequest === null || requestParameters.apiV2AomGetPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2AomGetPostRequest','Required parameter requestParameters.apiV2AomGetPostRequest was null or undefined when calling apiV2AomGetPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }

        const response = await this.request({
            path: `/api/v2/aom/get`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2AomGetPostRequestToJSON(requestParameters.apiV2AomGetPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2AomGetPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns automated order maker details and currency balances.
     * Automated order maker details
     */
    async apiV2AomGetPost(requestParameters: ApiV2AomGetPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomGetPost200Response> {
        const response = await this.apiV2AomGetPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns the list of automated order makers.
     * List automated order makers
     */
    async apiV2AomListPostRaw(requestParameters: ApiV2AomListPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomListPost200Response>> {
        if (requestParameters.apiV2AomListPostRequest === null || requestParameters.apiV2AomListPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2AomListPostRequest','Required parameter requestParameters.apiV2AomListPostRequest was null or undefined when calling apiV2AomListPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }

        const response = await this.request({
            path: `/api/v2/aom/list`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2AomListPostRequestToJSON(requestParameters.apiV2AomListPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2AomListPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns the list of automated order makers.
     * List automated order makers
     */
    async apiV2AomListPost(requestParameters: ApiV2AomListPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomListPost200Response> {
        const response = await this.apiV2AomListPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Starts a newly created or previously stopped automated order maker.
     * Start automated order maker
     */
    async apiV2AomStartPostRaw(requestParameters: ApiV2AomStartPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomStartPost200Response>> {
        if (requestParameters.apiV2AomGetPostRequest === null || requestParameters.apiV2AomGetPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2AomGetPostRequest','Required parameter requestParameters.apiV2AomGetPostRequest was null or undefined when calling apiV2AomStartPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }

        const response = await this.request({
            path: `/api/v2/aom/start`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2AomGetPostRequestToJSON(requestParameters.apiV2AomGetPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2AomStartPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Starts a newly created or previously stopped automated order maker.
     * Start automated order maker
     */
    async apiV2AomStartPost(requestParameters: ApiV2AomStartPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomStartPost200Response> {
        const response = await this.apiV2AomStartPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Stops an active automated order maker.
     * Stop automated order maker
     */
    async apiV2AomStopPostRaw(requestParameters: ApiV2AomStopPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomStopPost200Response>> {
        if (requestParameters.apiV2AomGetPostRequest === null || requestParameters.apiV2AomGetPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2AomGetPostRequest','Required parameter requestParameters.apiV2AomGetPostRequest was null or undefined when calling apiV2AomStopPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }

        const response = await this.request({
            path: `/api/v2/aom/stop`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2AomGetPostRequestToJSON(requestParameters.apiV2AomGetPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2AomStopPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Stops an active automated order maker.
     * Stop automated order maker
     */
    async apiV2AomStopPost(requestParameters: ApiV2AomStopPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomStopPost200Response> {
        const response = await this.apiV2AomStopPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Tops up automated order maker currency balance.
     * Top up automated order maker
     */
    async apiV2AomTopupPostRaw(requestParameters: ApiV2AomTopupPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomTopupPost200Response>> {
        if (requestParameters.apiV2AomTopupPostRequest === null || requestParameters.apiV2AomTopupPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2AomTopupPostRequest','Required parameter requestParameters.apiV2AomTopupPostRequest was null or undefined when calling apiV2AomTopupPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }

        const response = await this.request({
            path: `/api/v2/aom/topup`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2AomTopupPostRequestToJSON(requestParameters.apiV2AomTopupPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2AomTopupPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Tops up automated order maker currency balance.
     * Top up automated order maker
     */
    async apiV2AomTopupPost(requestParameters: ApiV2AomTopupPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomTopupPost200Response> {
        const response = await this.apiV2AomTopupPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Updates an existing automated order maker. An AOM can only be updated when inactive.
     * Update automated order maker
     */
    async apiV2AomUpdatePostRaw(requestParameters: ApiV2AomUpdatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomUpdatePost200Response>> {
        if (requestParameters.apiV2AomUpdatePostRequest === null || requestParameters.apiV2AomUpdatePostRequest === undefined) {
            throw new runtime.RequiredError('apiV2AomUpdatePostRequest','Required parameter requestParameters.apiV2AomUpdatePostRequest was null or undefined when calling apiV2AomUpdatePost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }

        const response = await this.request({
            path: `/api/v2/aom/update`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2AomUpdatePostRequestToJSON(requestParameters.apiV2AomUpdatePostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2AomUpdatePost200ResponseFromJSON(jsonValue));
    }

    /**
     * Updates an existing automated order maker. An AOM can only be updated when inactive.
     * Update automated order maker
     */
    async apiV2AomUpdatePost(requestParameters: ApiV2AomUpdatePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomUpdatePost200Response> {
        const response = await this.apiV2AomUpdatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Transfers the total balance of automated order maker purchases to wallet.
     * Automated order maker purchase balance withdrawal
     */
    async apiV2AomWithdrawPostRaw(requestParameters: ApiV2AomWithdrawPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV2AomWithdrawPost200Response>> {
        if (requestParameters.apiV2AomGetPostRequest === null || requestParameters.apiV2AomGetPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2AomGetPostRequest','Required parameter requestParameters.apiV2AomGetPostRequest was null or undefined when calling apiV2AomWithdrawPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }

        const response = await this.request({
            path: `/api/v2/aom/withdraw`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2AomGetPostRequestToJSON(requestParameters.apiV2AomGetPostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2AomWithdrawPost200ResponseFromJSON(jsonValue));
    }

    /**
     * Transfers the total balance of automated order maker purchases to wallet.
     * Automated order maker purchase balance withdrawal
     */
    async apiV2AomWithdrawPost(requestParameters: ApiV2AomWithdrawPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV2AomWithdrawPost200Response> {
        const response = await this.apiV2AomWithdrawPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
