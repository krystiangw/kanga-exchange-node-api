/* tslint:disable */
/* eslint-disable */
/**
 * Kanga Exchange API
 * API documentation generated from Kanga Exchange source code.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanga.exchange
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Payment details
 * @export
 * @interface ApiV2PayPaymentGetPost200ResponseOneOf
 */
export interface ApiV2PayPaymentGetPost200ResponseOneOf {
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    result: ApiV2PayPaymentGetPost200ResponseOneOfResultEnum;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    created: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    itemPrice: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    itemCurrency: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    destinationPrice: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    destinationCurrency: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    feeRate: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    payCode: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    state: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    paymentId: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    paymentAmount?: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    paymentCurrency?: string;
    /**
     * 
     * @type {string}
     * @memberof ApiV2PayPaymentGetPost200ResponseOneOf
     */
    settlementDate?: string;
}


/**
 * @export
 */
export const ApiV2PayPaymentGetPost200ResponseOneOfResultEnum = {
    Ok: 'ok'
} as const;
export type ApiV2PayPaymentGetPost200ResponseOneOfResultEnum = typeof ApiV2PayPaymentGetPost200ResponseOneOfResultEnum[keyof typeof ApiV2PayPaymentGetPost200ResponseOneOfResultEnum];


/**
 * Check if a given object implements the ApiV2PayPaymentGetPost200ResponseOneOf interface.
 */
export function instanceOfApiV2PayPaymentGetPost200ResponseOneOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "result" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "created" in value;
    isInstance = isInstance && "itemPrice" in value;
    isInstance = isInstance && "itemCurrency" in value;
    isInstance = isInstance && "destinationPrice" in value;
    isInstance = isInstance && "destinationCurrency" in value;
    isInstance = isInstance && "feeRate" in value;
    isInstance = isInstance && "payCode" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "state" in value;
    isInstance = isInstance && "paymentId" in value;

    return isInstance;
}

export function ApiV2PayPaymentGetPost200ResponseOneOfFromJSON(json: any): ApiV2PayPaymentGetPost200ResponseOneOf {
    return ApiV2PayPaymentGetPost200ResponseOneOfFromJSONTyped(json, false);
}

export function ApiV2PayPaymentGetPost200ResponseOneOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiV2PayPaymentGetPost200ResponseOneOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'result': json['result'],
        'id': json['id'],
        'created': json['created'],
        'itemPrice': json['itemPrice'],
        'itemCurrency': json['itemCurrency'],
        'destinationPrice': json['destinationPrice'],
        'destinationCurrency': json['destinationCurrency'],
        'feeRate': json['feeRate'],
        'payCode': json['payCode'],
        'email': json['email'],
        'state': json['state'],
        'paymentId': json['paymentId'],
        'paymentAmount': !exists(json, 'paymentAmount') ? undefined : json['paymentAmount'],
        'paymentCurrency': !exists(json, 'paymentCurrency') ? undefined : json['paymentCurrency'],
        'settlementDate': !exists(json, 'settlementDate') ? undefined : json['settlementDate'],
    };
}

export function ApiV2PayPaymentGetPost200ResponseOneOfToJSON(value?: ApiV2PayPaymentGetPost200ResponseOneOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'result': value.result,
        'id': value.id,
        'created': value.created,
        'itemPrice': value.itemPrice,
        'itemCurrency': value.itemCurrency,
        'destinationPrice': value.destinationPrice,
        'destinationCurrency': value.destinationCurrency,
        'feeRate': value.feeRate,
        'payCode': value.payCode,
        'email': value.email,
        'state': value.state,
        'paymentId': value.paymentId,
        'paymentAmount': value.paymentAmount,
        'paymentCurrency': value.paymentCurrency,
        'settlementDate': value.settlementDate,
    };
}

