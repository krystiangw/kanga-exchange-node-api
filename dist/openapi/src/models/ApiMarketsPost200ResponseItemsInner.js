"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Kanga Exchange API
 * API documentation generated from Kanga Exchange source code.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanga.exchange
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiMarketsPost200ResponseItemsInnerToJSON = exports.ApiMarketsPost200ResponseItemsInnerFromJSONTyped = exports.ApiMarketsPost200ResponseItemsInnerFromJSON = exports.instanceOfApiMarketsPost200ResponseItemsInner = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ApiMarketsPost200ResponseItemsInner interface.
 */
function instanceOfApiMarketsPost200ResponseItemsInner(value) {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "buyingCurrency" in value;
    isInstance = isInstance && "payingCurrency" in value;
    isInstance = isInstance && "minAmount" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "mainMarket" in value;
    isInstance = isInstance && "pricePrecision" in value;
    isInstance = isInstance && "index" in value;
    isInstance = isInstance && "bidsAvailableSince" in value;
    isInstance = isInstance && "asksAvailableSince" in value;
    return isInstance;
}
exports.instanceOfApiMarketsPost200ResponseItemsInner = instanceOfApiMarketsPost200ResponseItemsInner;
function ApiMarketsPost200ResponseItemsInnerFromJSON(json) {
    return ApiMarketsPost200ResponseItemsInnerFromJSONTyped(json, false);
}
exports.ApiMarketsPost200ResponseItemsInnerFromJSON = ApiMarketsPost200ResponseItemsInnerFromJSON;
function ApiMarketsPost200ResponseItemsInnerFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['id'],
        'buyingCurrency': json['buyingCurrency'],
        'payingCurrency': json['payingCurrency'],
        'minAmount': json['minAmount'],
        'type': json['type'],
        'mainMarket': json['mainMarket'],
        'pricePrecision': json['pricePrecision'],
        'index': json['index'],
        'available': !(0, runtime_1.exists)(json, 'available') ? undefined : json['available'],
        'opening': !(0, runtime_1.exists)(json, 'opening') ? undefined : json['opening'],
        'ecoOpening': !(0, runtime_1.exists)(json, 'ecoOpening') ? undefined : json['ecoOpening'],
        'lastPrice': !(0, runtime_1.exists)(json, 'lastPrice') ? undefined : json['lastPrice'],
        'change': !(0, runtime_1.exists)(json, 'change') ? undefined : json['change'],
        'volume': !(0, runtime_1.exists)(json, 'volume') ? undefined : json['volume'],
        'bidsAvailableSince': json['bidsAvailableSince'],
        'asksAvailableSince': json['asksAvailableSince'],
    };
}
exports.ApiMarketsPost200ResponseItemsInnerFromJSONTyped = ApiMarketsPost200ResponseItemsInnerFromJSONTyped;
function ApiMarketsPost200ResponseItemsInnerToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'buyingCurrency': value.buyingCurrency,
        'payingCurrency': value.payingCurrency,
        'minAmount': value.minAmount,
        'type': value.type,
        'mainMarket': value.mainMarket,
        'pricePrecision': value.pricePrecision,
        'index': value.index,
        'available': value.available,
        'opening': value.opening,
        'ecoOpening': value.ecoOpening,
        'lastPrice': value.lastPrice,
        'change': value.change,
        'volume': value.volume,
        'bidsAvailableSince': value.bidsAvailableSince,
        'asksAvailableSince': value.asksAvailableSince,
    };
}
exports.ApiMarketsPost200ResponseItemsInnerToJSON = ApiMarketsPost200ResponseItemsInnerToJSON;
//# sourceMappingURL=ApiMarketsPost200ResponseItemsInner.js.map