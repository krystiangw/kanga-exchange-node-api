/* tslint:disable */
/* eslint-disable */
/**
 * Kanga Exchange API
 * API documentation generated from Kanga Exchange source code.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanga.exchange
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { ApiMarketsPost200ResponseFromJSON, ApiV2MarketOrderBookPost200ResponseFromJSON, ApiV2MarketOrderBookPostRequestToJSON, ApiV2MarketOrderCancelPost200ResponseFromJSON, ApiV2MarketOrderCancelPostRequestToJSON, ApiV2MarketOrderCreatePost200ResponseFromJSON, ApiV2MarketOrderCreatePostRequestToJSON, ApiV2MarketOrderGetPost200ResponseFromJSON, ApiV2MarketOrderGetPostRequestToJSON, ApiV2MarketOrderHistoryListPost200ResponseFromJSON, ApiV2MarketOrderListPost200ResponseFromJSON, ApiV2MarketOrderListPostRequestToJSON, } from '../models';
/**
 *
 */
export class TradeApi extends runtime.BaseAPI {
    /**
     * Returns the list of all markets. This call will be deprecated in the near future.
     * Market list
     */
    async apiMarketsPostRaw(requestParameters, initOverrides) {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body', 'Required parameter requestParameters.body was null or undefined when calling apiMarketsPost.');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }
        const response = await this.request({
            path: `/api/markets`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => ApiMarketsPost200ResponseFromJSON(jsonValue));
    }
    /**
     * Returns the list of all markets. This call will be deprecated in the near future.
     * Market list
     */
    async apiMarketsPost(requestParameters, initOverrides) {
        const response = await this.apiMarketsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     * Returns the order book for the specified market (cached every 2 seconds).
     * Order book
     */
    async apiV2MarketOrderBookPostRaw(requestParameters, initOverrides) {
        if (requestParameters.apiV2MarketOrderBookPostRequest === null || requestParameters.apiV2MarketOrderBookPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2MarketOrderBookPostRequest', 'Required parameter requestParameters.apiV2MarketOrderBookPostRequest was null or undefined when calling apiV2MarketOrderBookPost.');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }
        const response = await this.request({
            path: `/api/v2/market/order/book`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2MarketOrderBookPostRequestToJSON(requestParameters.apiV2MarketOrderBookPostRequest),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2MarketOrderBookPost200ResponseFromJSON(jsonValue));
    }
    /**
     * Returns the order book for the specified market (cached every 2 seconds).
     * Order book
     */
    async apiV2MarketOrderBookPost(requestParameters, initOverrides) {
        const response = await this.apiV2MarketOrderBookPostRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     * Cancels the order identified by orderId.
     * Cancel order
     */
    async apiV2MarketOrderCancelPostRaw(requestParameters, initOverrides) {
        if (requestParameters.apiV2MarketOrderCancelPostRequest === null || requestParameters.apiV2MarketOrderCancelPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2MarketOrderCancelPostRequest', 'Required parameter requestParameters.apiV2MarketOrderCancelPostRequest was null or undefined when calling apiV2MarketOrderCancelPost.');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }
        const response = await this.request({
            path: `/api/v2/market/order/cancel`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2MarketOrderCancelPostRequestToJSON(requestParameters.apiV2MarketOrderCancelPostRequest),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2MarketOrderCancelPost200ResponseFromJSON(jsonValue));
    }
    /**
     * Cancels the order identified by orderId.
     * Cancel order
     */
    async apiV2MarketOrderCancelPost(requestParameters, initOverrides) {
        const response = await this.apiV2MarketOrderCancelPostRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     * Creates a new order. On success returns orderId.
     * Create order
     */
    async apiV2MarketOrderCreatePostRaw(requestParameters, initOverrides) {
        if (requestParameters.apiV2MarketOrderCreatePostRequest === null || requestParameters.apiV2MarketOrderCreatePostRequest === undefined) {
            throw new runtime.RequiredError('apiV2MarketOrderCreatePostRequest', 'Required parameter requestParameters.apiV2MarketOrderCreatePostRequest was null or undefined when calling apiV2MarketOrderCreatePost.');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }
        const response = await this.request({
            path: `/api/v2/market/order/create`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2MarketOrderCreatePostRequestToJSON(requestParameters.apiV2MarketOrderCreatePostRequest),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2MarketOrderCreatePost200ResponseFromJSON(jsonValue));
    }
    /**
     * Creates a new order. On success returns orderId.
     * Create order
     */
    async apiV2MarketOrderCreatePost(requestParameters, initOverrides) {
        const response = await this.apiV2MarketOrderCreatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     * Returns the details of the specified order.
     * Get order
     */
    async apiV2MarketOrderGetPostRaw(requestParameters, initOverrides) {
        if (requestParameters.apiV2MarketOrderGetPostRequest === null || requestParameters.apiV2MarketOrderGetPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2MarketOrderGetPostRequest', 'Required parameter requestParameters.apiV2MarketOrderGetPostRequest was null or undefined when calling apiV2MarketOrderGetPost.');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }
        const response = await this.request({
            path: `/api/v2/market/order/get`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2MarketOrderGetPostRequestToJSON(requestParameters.apiV2MarketOrderGetPostRequest),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2MarketOrderGetPost200ResponseFromJSON(jsonValue));
    }
    /**
     * Returns the details of the specified order.
     * Get order
     */
    async apiV2MarketOrderGetPost(requestParameters, initOverrides) {
        const response = await this.apiV2MarketOrderGetPostRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     * Returns up to 50 recent orders (both fulfilled and canceled) from the specified market.
     * Order history
     */
    async apiV2MarketOrderHistoryListPostRaw(requestParameters, initOverrides) {
        if (requestParameters.apiV2MarketOrderBookPostRequest === null || requestParameters.apiV2MarketOrderBookPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2MarketOrderBookPostRequest', 'Required parameter requestParameters.apiV2MarketOrderBookPostRequest was null or undefined when calling apiV2MarketOrderHistoryListPost.');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }
        const response = await this.request({
            path: `/api/v2/market/order/history/list`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2MarketOrderBookPostRequestToJSON(requestParameters.apiV2MarketOrderBookPostRequest),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2MarketOrderHistoryListPost200ResponseFromJSON(jsonValue));
    }
    /**
     * Returns up to 50 recent orders (both fulfilled and canceled) from the specified market.
     * Order history
     */
    async apiV2MarketOrderHistoryListPost(requestParameters, initOverrides) {
        const response = await this.apiV2MarketOrderHistoryListPostRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     * Returns up to 100 active orders from the specified market.
     * Active order list
     */
    async apiV2MarketOrderListPostRaw(requestParameters, initOverrides) {
        if (requestParameters.apiV2MarketOrderListPostRequest === null || requestParameters.apiV2MarketOrderListPostRequest === undefined) {
            throw new runtime.RequiredError('apiV2MarketOrderListPostRequest', 'Required parameter requestParameters.apiV2MarketOrderListPostRequest was null or undefined when calling apiV2MarketOrderListPost.');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["api-sig"] = this.configuration.apiKey("api-sig"); // SignatureAuth authentication
        }
        const response = await this.request({
            path: `/api/v2/market/order/list`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV2MarketOrderListPostRequestToJSON(requestParameters.apiV2MarketOrderListPostRequest),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV2MarketOrderListPost200ResponseFromJSON(jsonValue));
    }
    /**
     * Returns up to 100 active orders from the specified market.
     * Active order list
     */
    async apiV2MarketOrderListPost(requestParameters, initOverrides) {
        const response = await this.apiV2MarketOrderListPostRaw(requestParameters, initOverrides);
        return await response.value();
    }
}
//# sourceMappingURL=TradeApi.js.map